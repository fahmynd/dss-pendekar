{"version":3,"file":"static/js/691.1826b5d1.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/util/ColorSet.ts","../node_modules/src/.internal/charts/xy/XYChartDefaultTheme.ts","../node_modules/src/.internal/charts/xy/XYChart.ts","../node_modules/src/.internal/charts/xy/XYCursor.ts","../node_modules/src/.internal/charts/xy/axes/Axis.ts","../node_modules/src/.internal/core/util/Draw.ts","../node_modules/src/.internal/core/render/Line.ts","../node_modules/src/.internal/core/render/Tick.ts","../node_modules/src/.internal/charts/xy/axes/AxisTick.ts","../node_modules/src/.internal/charts/xy/axes/AxisLabel.ts","../node_modules/src/.internal/charts/xy/axes/AxisRenderer.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererX.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererY.ts","../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts","../node_modules/src/.internal/charts/xy/axes/Grid.ts","../node_modules/src/.internal/charts/xy/axes/ValueAxis.ts","../node_modules/src/.internal/charts/xy/series/XYSeries.ts","../node_modules/src/.internal/charts/xy/series/BaseColumnSeries.ts","../node_modules/src/.internal/charts/xy/series/ColumnSeries.ts","../node_modules/src/.internal/core/render/Bullet.ts","../node_modules/src/.internal/core/render/Legend.ts"],"sourcesContent":["import { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\";\nimport { Color } from \"./Color\";\n\n\nexport interface IColorSetSettings extends IEntitySettings {\n\n\t/**\n\t * List of colors in the set.\n\t */\n\tcolors?: Color[];\n\n\t/**\n\t * A step size when using `next()`.\n\t *\n\t * E.g. setting to `2` will make it return every second color in the list.\n\t *\n\t * @default 1\n\t */\n\tstep?: number;\n\n\t/**\n\t * Start iterating colors from specific index.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * If set to `true`, color set will reuse existing colors from the list\n\t * inestead of generating new ones.\n\t *\n\t * @default false\n\t */\n\treuse?: boolean;\n\n\t/**\n\t * A base color to generate new colors from if `colors` is not specified.\n\t * @type {[type]}\n\t */\n\tbaseColor?: Color;\n\n\t/**\n\t * A set of tranformation to apply to base list of colors when the set runs\n\t * out of colors and generates additional ones.\n\t */\n\tpassOptions?: IColorSetStepOptions;\n\n\t/**\n\t * If set, each returned color will be applied saturation.\n\t */\n\tsaturation?: number;\n\n\t// count?: number;\n}\n\nexport interface IColorSetPrivate extends IEntityPrivate {\n\n\tcurrentStep?: number;\n\tcurrentPass?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tnumColors?: number;\n\n}\n\nexport interface IColorSetStepOptions {\n\n\t/**\n\t * Value to add to \"hue\".\n\t */\n\thue?: number;\n\n\t/**\n\t * Value to add to \"saturation\".\n\t */\n\tsaturation?: number;\n\n\t/**\n\t * Value to add to \"lightness\".\n\t */\n\tlightness?: number;\n\n}\n\n\n/**\n * An object which holds list of colors and can generate new ones.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\n */\nexport class ColorSet extends Entity {\n\tpublic static className: string = \"ColorSet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([ColorSet.className]);\n\n\tdeclare public _settings: IColorSetSettings;\n\tdeclare public _privateSettings: IColorSetPrivate;\n\n\t//protected _currentPass: number = 0;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because color set will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t\tthis._dirty[\"colors\"] = false;\n\t}\n\n\tpublic _beforeChanged(): void {\n\t\tif (this.isDirty(\"colors\")) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic generateColors(): void {\n\t\tthis.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1)\n\t\tconst pass = this.getPrivate(\"currentPass\");\n\t\tconst colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\n\t\tif (!this.getPrivate(\"numColors\")) {\n\t\t\tthis.setPrivate(\"numColors\", colors.length);\n\t\t}\n\t\t//const len = colors.length;\n\t\tconst len = this.getPrivate(\"numColors\")!;\n\t\t//const start = len - this.getPrivate(\"numColors\")!;\n\t\tconst start = 0;\n\t\tconst passOptions = this.get(\"passOptions\")!;\n\t\tconst reuse = this.get(\"reuse\");\n\t\tfor (let i = start; i < len; i++) {\n\t\t\tif (reuse) {\n\t\t\t\tcolors.push(colors[i])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst hsl = colors[i]!.toHSL();\n\t\t\t\tlet h = hsl.h + (passOptions.hue || 0) * pass!;\n\t\t\t\twhile (h > 1) h -= 1;\n\n\t\t\t\tlet s = hsl.s + (passOptions.saturation || 0) * pass!;\n\t\t\t\t//if (s > 1) s -= Math.floor(s);\n\t\t\t\tif (s > 1) s = 1;\n\t\t\t\tif (s < 0) s = 0;\n\n\t\t\t\tlet l = hsl.l + (passOptions.lightness || 0) * pass!;\n\t\t\t\t//if (l > 1) l -= Math.floor(l);\n\t\t\t\twhile (l > 1) l -= 1;\n\t\t\t\tcolors.push(Color.fromHSL(h, s, l));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a [[Color]] at specific index.\n\t *\n\t * If there's no color at this index, a new color is generated.\n\t *\n\t * @param   index  Index\n\t * @return         Color\n\t */\n\tpublic getIndex(index: number): Color {\n\t\tconst colors = this.get(\"colors\", []);\n\t\tconst saturation = this.get(\"saturation\");\n\t\tif (index >= colors.length) {\n\t\t\tthis.generateColors();\n\t\t\treturn this.getIndex(index);\n\t\t}\n\n\t\treturn saturation != null ? Color.saturate(colors[index], saturation!) : colors[index];\n\t}\n\n\t/**\n\t * Returns next [[Color]] in the list.\n\t *\n\t * If the list is out of colors, new ones are generated dynamically.\n\t */\n\tpublic next() {\n\t\tlet currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t\tthis.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\n\t\treturn this.getIndex(currentStep);\n\t}\n\n\t/**\n\t * Resets counter to the start of the list, so the next call for `next()` will\n\t * return the first color.\n\t */\n\tpublic reset() {\n\t\tthis.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t\tthis.setPrivate(\"currentPass\", 0);\n\t}\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\t\t\t\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t * \n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t * \n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t * \n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tthis.handleWheel(event);\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tif((event as any).button == 2){\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: event.clientX, y: event.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: IPointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif(!series.isHidden()){\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t * \n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tif((event as any).button == 2){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * @todo review\n\t * Width in pixels between grid lines (read-only). It might not be exact, as DateAxis can have grids at irregular intervals. Could be used to detect when size changes and to adjust labels for them not to overlap.\n\t */\n\tcellWidth?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tthis._updateFinals(start, end);\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n","/** @ignore *//** */\n\nimport type { IPoint } from \"./IPoint\"\nimport * as $math from \"./Math\";\nimport type { IGraphics } from \"../render/backend/Renderer\";\n\n/**\n * @ignore\n */\nexport function segmentedLine(display: IGraphics, segments: Array<Array<Array<IPoint>>>) {\n\tfor (let s = 0, len = segments.length; s < len; s++) {\n\t\tconst groups = segments[s];\n\t\tif (groups.length > 0) {\n\t\t\tlet firstGroup = groups[0];\n\t\t\tif (firstGroup.length > 0) {\n\t\t\t\tlet firstPoint = firstGroup[0];\n\t\t\t\tdisplay.moveTo(firstPoint.x, firstPoint.y);\n\t\t\t\tfor (let g = 0, len = groups.length; g < len; g++) {\n\t\t\t\t\tline(display, groups[g]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport function line(display: IGraphics, points: Array<IPoint>) {\n\tfor (let p = 0, len = points.length; p < len; p++) {\n\t\tconst point = points[p];\n\t\tdisplay.lineTo(point.x, point.y);\n\t}\n}\n\n/**\n * @ignore\n */\nexport function moveTo(display: IGraphics, point: IPoint) {\n\tdisplay.moveTo(point.x, point.y);\n}\n\n/**\n * @ignore\n */\nexport function clear(display: IGraphics) {\n\tdisplay.clear();\n}\n\n/**\n * @ignore\n */\nexport function smoothedSegmentedline(display: IGraphics, segments: Array<Array<Array<IPoint>>>, tensionX: number, tensionY: number) {\n\tfor (let s = 0, len = segments.length; s < len; s++) {\n\t\tconst groups = segments[s];\n\t\tif (groups.length > 0) {\n\t\t\tlet firstGroup = groups[0];\n\t\t\tif (firstGroup.length > 0) {\n\t\t\t\tlet firstPoint = firstGroup[0];\n\t\t\t\tdisplay.moveTo(firstPoint.x, firstPoint.y);\n\t\t\t\tfor (let g = 0, len = groups.length; g < len; g++) {\n\t\t\t\t\tconst points = groups[g];\n\t\t\t\t\tif (points.length > 0) {\n\t\t\t\t\t\tdisplay.lineTo(points[0].x, points[0].y)\n\t\t\t\t\t}\n\t\t\t\t\tsmoothedLine(display, points, tensionX, tensionY);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport function smoothedLine(display: IGraphics, points: Array<IPoint>, tensionX: number, tensionY: number) {\n\n\tfor (let i = points.length - 1; i > 0; i--) {\n\t\tlet p0 = points[i];\n\t\tlet p1 = points[i - 1];\n\n\t\tif (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\n\t\t\tpoints.splice(i - 1, 1);\n\t\t}\n\t}\n\n\tif (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\n\t\tline(display, points);\n\t\treturn;\n\t}\n\n\ttensionX = 1 - tensionX + 0.00001;\n\ttensionY = 1 - tensionY + 0.00001;\n\n\tlet first = points[0];\n\tlet last = points[points.length - 1];\n\n\tlet closed: boolean = false;\n\n\tif ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\n\t\tclosed = true;\n\t}\n\n\t// Can't moveTo here, as it wont be possible to have fill then.\n\tlet path: string = \"\";\n\n\tfor (let i = 0, len = points.length - 1; i < len; i++) {\n\t\tlet p0: IPoint = points[i - 1];\n\n\t\tlet p1: IPoint = points[i];\n\n\t\tlet p2: IPoint = points[i + 1];\n\n\t\tlet p3: IPoint = points[i + 2];\n\n\t\tif (i === 0) {\n\t\t\tif (closed) {\n\t\t\t\tp0 = points[len - 2];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp0 = points[0];\n\t\t\t}\n\t\t} else if (i == len - 1) {\n\t\t\tif (closed) {\n\t\t\t\tp3 = points[1];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp3 = p2;\n\t\t\t}\n\t\t}\n\n\n\t\tlet controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\n\t\tlet controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\n\n\t\tdisplay.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\n\t}\n\n\treturn path;\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport * as $draw from \"../util/Draw\";\n\nexport interface ILineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A list of [[IPoint]] (x/y coordinates) points for the line.\n\t */\n\tpoints?: Array<IPoint>;\n\n\t/**\n\t * A list of [[IPoint]] arrays for different segments of the line.\n\t * \n\t * @since 5.1.4\n\t */\n\tsegments?: Array<Array<Array<IPoint>>>;\n}\n\nexport interface ILinePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Line extends Graphics {\n\n\tdeclare public _settings: ILineSettings;\n\tdeclare public _privateSettings: ILinePrivate;\n\n\tpublic static className: string = \"Line\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Line.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\n\t\t\tconst points = this.get(\"points\");\n\t\t\tconst segments = this.get(\"segments\");\n\n\t\t\tif (points && points.length > 0) {\n\t\t\t\tlet point = points[0];\n\n\t\t\t\tthis._display.moveTo(point.x, point.y);\n\t\t\t\t$draw.segmentedLine(this._display, [[points]]);\n\t\t\t}\n\t\t\telse if (segments) {\n\t\t\t\t$draw.segmentedLine(this._display, segments);\n\t\t\t}\n\t\t\telse if (!this.get(\"draw\")) {\n\t\t\t\tlet w = this.width();\n\t\t\t\tlet h = this.height();\n\n\t\t\t\tthis._display.moveTo(0, 0);\n\t\t\t\tthis._display.lineTo(w, h);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Line, ILineSettings, ILinePrivate } from \"./Line\";\n\n\nexport interface ITickSettings extends ILineSettings {\n\n\t/**\n\t * Length in pixels.\n\t */\n\tlength?: number;\n\n\t/**\n\t * Location within target space. 0 - beginning, 1 - end.\n\t */\n\tlocation?: number;\n\n}\n\nexport interface ITickPrivate extends ILinePrivate {\n}\n\n/**\n * Draws a tick element (mostly used on axes).\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n */\nexport class Tick extends Line {\n\n\tdeclare public _settings: ITickSettings;\n\tdeclare public _privateSettings: ITickPrivate;\n\n\tpublic static className: string = \"Tick\";\n\tpublic static classNames: Array<string> = Line.classNames.concat([Tick.className]);\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif(this.get(\"opposite\")){\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tvar w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet previous = -Infinity;\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\t\t\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\t\t\t\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\t\n\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis._disposers.push(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tthis._fixPosition();\n\t\t}))\n\n\t\tthis._disposers.push(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tthis._fixPosition();\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tprotected _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../core/util/Entity\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Series } from \"../../core/render/Series\";\n\nexport interface IBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal location within target element.\n\t *\n\t * 0 - left, 1 - right, or anything inbetweeen.\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location within target element.\n\t *\n\t * 0 - top, 1 - bottom, or anything inbetweeen.\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * If set to `true`, the bullet will redraw its `sprite` element whenever\n\t * anything in its parent series changes.\n\t *\n\t * @default false\n\t */\n\tdynamic?: boolean;\n\n\t/**\n\t * If set to `true`, the bullet will be automatically rotated to face\n\t * direction of line it is attached to.\n\t *\n\t * NOTE: Works only in  [[Flow]] and [[MapPointSeries]] (when [[MapPoint]] is\n\t * attached to a [[MapLine]]).\n\t *\n\t * @default false\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * If `autoRotate` is set to `true`, value of `autoRotateAngle` will be added\n\t * to the automatically-calculated angle.\n\t */\n\tautoRotateAngle?: number;\n\n}\n\nexport interface IBulletPrivate extends IEntityPrivate {\n\thidden?:boolean;\n}\n\n/**\n * A universal placeholder for bullet elements.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n */\nexport class Bullet extends Entity {\n\tpublic static className: string = \"Bullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Bullet.className]);\n\n\tdeclare public _settings: IBulletSettings;\n\tdeclare public _privateSettings: IBulletPrivate;\n\n\t// used by MapPolygons where one data item can have multiple bullets of the same kind\n\tpublic _index?: number;\n\n\t/**\n\t * Target series object if it's a bullet for series.\n\t */\n\tpublic series: Series | undefined;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because bullet will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tconst sprite = this.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n\t\t\tif (this.series) {\n\t\t\t\tthis.series._positionBullet(this);\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { Entity, IEntitySettings } from \"../../core/util/Entity\";\nimport type { Color } from \"../../core/util/Color\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface ILegendDataItem extends ISeriesDataItem {\n\n\t/**\n\t * [[Container]] element holding all other legend item elements, labels,\n\t * markers, etc.\n\t */\n\titemContainer: Container;\n\n\t/**\n\t * Marker element.\n\t */\n\tmarker: Container;\n\n\t/**\n\t * Marker rectangle element.\n\t */\n\tmarkerRectangle: RoundedRectangle;\n\n\t/**\n\t * Label element.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Value label element.\n\t */\n\tvalueLabel: Label;\n\n\t/**\n\t * Marker fill color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Marker stroke (outline) color.\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Name of the legend item.\n\t */\n\tname?: string;\n\n}\n\nexport interface ILegendItemSettings extends IEntitySettings {\n\tvisible?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface ILegendItem extends Entity {\n\t_settings: ILegendItemSettings;\n\tisHidden?: () => boolean;\n\tshow?: () => void;\n\thide?: () => void;\n\tcreateLegendMarker?: () => {}\n\tcomponent?: Series;\n\tupdateLegendValue?: () => {}\n\t// how to define that properties of dataItem should have legendDataItem?\n}\n\n//type ILegendDataItemSettings = { [K in keyof ILegendDataItem]?: string; };\n\nexport interface ILegendSettings extends ISeriesSettings {\n\n\t/**\n\t * If set to `true` the legend will not try to mimic appearance of the actual\n\t * item but rather show default square marker.\n\t *\n\t * @default false\n\t */\n\tuseDefaultMarker?: boolean;\n\n\t/**\n\t * A key to look up in data for a name of the data item.\n\t *\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A key to look up in data for a fill of the data item.\n\t *\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A key to look up in data for a stroke of the data item.\n\t *\n\t */\n\tstrokeField?: string;\n\n\t/**\n\t * Which legend item element will be clickable to toggle related chart item:\n\t * * `\"itemContainer\"` - the whole legend item (default).\n\t * * `\"marker\"` - legend item marker.\n\t * * `\"none\"` - disables toggling of legend item.\n\t *\n\t * @default \"itemContainer\"\n\t * @since 5.0.13\n\t */\n\tclickTarget?: \"itemContainer\" | \"marker\" | \"none\"\n\n}\n\nexport interface ILegendPrivate extends ISeriesPrivate {\n}\n\nexport interface ILegendEvents extends ISeriesEvents {\n\n}\n\n/**\n * A universal legend control.\n *\n * @important\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\n */\nexport class Legend extends Series {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n\t\tthis.fields.push(\"name\", \"stroke\", \"fill\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"Legend\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Legend.className]);\n\n\tdeclare public _settings: ILegendSettings;\n\tdeclare public _privateSettings: ILegendPrivate;\n\tdeclare public _dataItemSettings: ILegendDataItem;\n\tdeclare public _events: ILegendEvents;\n\n\n\t/**\n\t * List of all [[Container]] elements for legend items.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly itemContainers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n\t\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n\t\t\t})\n\t\t}, [this.itemContainers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeItemContainer(dataItem: DataItem<this[\"_dataItemSettings\"]>): Container {\n\t\tconst itemContainer = this.children.push(this.itemContainers.make());\n\t\titemContainer._setDataItem(dataItem);\n\t\tthis.itemContainers.push(itemContainer);\n\t\titemContainer.states.create(\"disabled\", {});\n\t\treturn itemContainer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): Container {\n\t\tconst marker = this.markers.make();\n\t\tthis.markers.push(marker);\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of legend marker elements.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly markers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel.states.create(\"disabled\", {});\n\t\treturn label;\n\t}\n\n\t/**\n\t * List of legend label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n\t\t}, [this.labels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeValueLabel(): Label {\n\t\tconst valueLabel = this.valueLabels.make();\n\t\tvalueLabel.states.create(\"disabled\", {});\n\t\treturn valueLabel;\n\t}\n\n\t/**\n\t * List of legend value label elements.\n\t *\n\t * @default new ListTemplate<label>\n\t */\n\tpublic readonly valueLabels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n\t\t}, [this.valueLabels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarkerRectangle(): RoundedRectangle {\n\t\tconst markerRectangle = this.markerRectangles.make();\n\t\tmarkerRectangle.states.create(\"disabled\", {});\n\t\treturn markerRectangle;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markerRectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n\t\t}, [this.markerRectangles.template])\n\t);\n\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst itemContainer = this.makeItemContainer(dataItem);\n\n\t\tconst nameField = this.get(\"nameField\");\n\t\tconst fillField = this.get(\"fillField\");\n\t\tconst strokeField = this.get(\"strokeField\");\n\n\t\tif (itemContainer) {\n\t\t\tconst clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n\n\t\t\tconst item = dataItem.dataContext as ILegendItem;\n\n\t\t\tif (item && item.set) {\n\t\t\t\titem.set(<any>\"legendDataItem\", dataItem);\n\t\t\t}\n\n\t\t\titemContainer._setDataItem(dataItem);\n\t\t\tdataItem.set(\"itemContainer\", itemContainer);\n\n\t\t\tconst marker = this.makeMarker();\n\t\t\tif (marker) {\n\t\t\t\titemContainer.children.push(marker);\n\t\t\t\tmarker._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"marker\", marker);\n\n\t\t\t\tconst useDefaultMarker = this.get(\"useDefaultMarker\");\n\n\t\t\t\tconst markerRectangle = marker.children.push(this.makeMarkerRectangle());\n\n\t\t\t\tlet fill = dataItem.get(\"fill\");\n\t\t\t\tlet stroke = dataItem.get(\"stroke\");\n\n\t\t\t\tdataItem.set(\"markerRectangle\", markerRectangle);\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tfill = item.get(fillField as any, fill);\n\t\t\t\t\tstroke = item.get(strokeField as any, stroke);\n\t\t\t\t}\n\n\t\t\t\tif (!stroke) {\n\t\t\t\t\tstroke = fill;\n\t\t\t\t}\n\n\t\t\t\tif (!useDefaultMarker) {\n\t\t\t\t\tif (item && item.createLegendMarker) {\n\t\t\t\t\t\titem.createLegendMarker();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (item.on) {\n\t\t\t\t\t\titem.on(fillField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", item.get(fillField as any));\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\titem.on(strokeField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", item.get(strokeField as any));\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmarkerRectangle.setAll({ fill, stroke });\n\n\t\t\t\t// this solves if template field is set on slice\n\t\t\t\tconst component = item.component;\n\t\t\t\tif (component && component.updateLegendMarker) {\n\t\t\t\t\tcomponent.updateLegendMarker(item as any);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst label = this.makeLabel();\n\n\t\t\tif (label) {\n\t\t\t\titemContainer.children.push(label);\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"label\", label);\n\n\t\t\t\tlabel.text.on(\"text\", () => {\n\t\t\t\t\titemContainer.set(\"ariaLabel\", label.text._getText() + \"; \" + this._t(\"Press ENTER to toggle\"));\n\t\t\t\t});\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tdataItem.set(\"name\", item.get(nameField as any) as string);\n\t\t\t\t}\n\n\t\t\t\tlet name = dataItem.get(\"name\");\n\n\t\t\t\tif (name) {\n\t\t\t\t\tlabel.set(\"text\", name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst valueLabel = this.makeValueLabel();\n\t\t\tif (valueLabel) {\n\t\t\t\titemContainer.children.push(valueLabel);\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"valueLabel\", valueLabel);\n\t\t\t}\n\n\t\t\tif (item && item.show) {\n\n\t\t\t\tthis._disposers.push(item.on(\"visible\", (visible) => {\n\t\t\t\t\titemContainer.set(\"disabled\", !visible)\n\t\t\t\t}));\n\n\t\t\t\tif (!item.get(\"visible\")) {\n\t\t\t\t\titemContainer.set(\"disabled\", true);\n\t\t\t\t}\n\n\t\t\t\tif (clickTarget != \"none\") {\n\t\t\t\t\tvar clickContainer = itemContainer;\n\t\t\t\t\tif (clickTarget == \"marker\") {\n\t\t\t\t\t\tclickContainer = marker;\n\t\t\t\t\t}\n\t\t\t\t\tthis._addClickEvents(clickContainer, item, dataItem)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort children\n\t\t\tthis.children.values.sort((a, b) => {\n\t\t\t\tvar targetA = a.dataItem!.dataContext;\n\t\t\t\tvar targetB = b.dataItem!.dataContext;\n\t\t\t\tif (targetA && targetB) {\n\t\t\t\t\tvar indexA = this.data.indexOf(targetA);\n\t\t\t\t\tvar indexB = this.data.indexOf(targetB);\n\t\t\t\t\tif (indexA > indexB) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (indexA < indexB) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\tif (item && item.updateLegendValue) {\n\t\t\t\titem.updateLegendValue();\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\tprotected _addClickEvents(container: Container, item: ILegendItem, dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tcontainer.set(\"cursorOverStyle\", \"pointer\");\n\t\tcontainer.events.on(\"pointerover\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.hoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"pointerout\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.unhoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"click\", () => {\n\t\t\tconst labelText = dataItem.get(\"label\").text._getText();\n\n\t\t\tif (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n\t\t\t\titem.show();\n\t\t\t\tcontainer.set(\"disabled\", false);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\n\t\t\t}\n\t\t\telse if (item.hide) {\n\t\t\t\titem.hide();\n\t\t\t\tcontainer.set(\"disabled\", true);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\n\t\t\t}\n\t\t})\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tsuper.disposeDataItem(dataItem);\n\n\t\tconst dataContext = dataItem.dataContext as any;\n\t\tif (dataContext && dataContext.get) {\n\t\t\tconst di = dataContext.get(\"legendDataItem\");\n\t\t\tif (di == dataItem) {\n\t\t\t\tdataContext.set(\"legendDataItem\", undefined);\n\t\t\t}\n\t\t}\n\n\n\t\tlet itemContainer = dataItem.get(\"itemContainer\");\n\t\tif (itemContainer) {\n\t\t\tthis.itemContainers.removeValue(itemContainer);\n\t\t\titemContainer.dispose();\n\t\t}\n\n\t\tlet marker = dataItem.get(\"marker\");\n\t\tif (marker) {\n\t\t\tthis.markers.removeValue(marker);\n\t\t\tmarker.dispose();\n\t\t}\n\n\t\tlet markerRectangle = dataItem.get(\"markerRectangle\");\n\t\tif (markerRectangle) {\n\t\t\tthis.markerRectangles.removeValue(markerRectangle);\n\t\t\tmarkerRectangle.dispose();\n\t\t}\n\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tlet valueLabel = dataItem.get(\"valueLabel\");\n\t\tif (valueLabel) {\n\t\t\tthis.valueLabels.removeValue(valueLabel);\n\t\t\tvalueLabel.dispose();\n\t\t}\n\n\t}\n}\n"],"names":["ColorSet","_Entity","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_get","_getPrototypeOf","prototype","call","this","_dirty","isDirty","reset","setPrivate","getPrivate","pass","colors","get","Color","length","len","passOptions","reuse","i","push","hsl","toHSL","h","hue","s","saturation","l","lightness","index","generateColors","getIndex","currentStep","Entity","Object","defineProperty","className","XYChartDefaultTheme","_Theme","_this","ic","_root","interfaceColors","language","r","rule","bind","setAll","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","fillOpacity","setColor","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","p100","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","snapToSeriesBy","moveThreshold","strokeDasharray","ariaLabel","translate","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","p50","crisp","opposite","inversed","cellStartLocation","cellEndLocation","width","height","cursorOverStyle","isMeasured","position","startLocation","endLocation","fillRule","dataItem","axisFill","$type","gridIntervals","timeUnit","count","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","$array","$object","strictMinMax","groupData","groupCount","groupIntervals","axis","component","endValue","intervalDuration","baseInterval","gridInterval","min","$time","Date","locale","firstDayOfWeek","utc","undefined","timezone","getTime","val","Math","round","baseValue","logarithmic","autoZoom","step","$math","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","percent","strokeWidth","role","connect","autoGapCount","draw","display","sprite","parent","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","Theme","XYChart","_SerialChart","_assertThisInitialized","ListAutoDispose","chartContainer","children","Container","layout","verticalLayout","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","topPlotContainer","Button","themeTags","icon","Graphics","x","y","_this2","_defaultThemes","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","Rectangle","fill","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_display","cancelTouch","gridContainer","series","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","_this3","wheelX","wheelY","wheelEvent","$utils","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","fixPosition","newStart","newEnd","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_this4","_wheelDp","handleWheel","dispose","sign","diff","button","local","pointerId","_downPoints","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_this5","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","_this6","downPoints","movePoints","k","point","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","_ref","_ref2","downPos0","downPos1","movePos0","movePos1","d","max","e","sa","ea","downStartY","downEndY","_ref3","_ref4","cursorPoint","dataItems","isHidden","isHiding","startIndex","endIndex","tooltipDataItem","closestItem","minDistance","distance","abs","hypot","tooltip","_setDataItem","showDataItemTooltip","handleMove","toGlobal","_this7","_colorize","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","topAxesContainer","_handleScrollbar","grip","getTooltipText","rightAxesContainer","_handleZoomOut","colorSet","color","next","_setSoft","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","_this8","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","insertIndex","oldValue","Error","moveValue","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","_ref5","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","_this9","hh","plotT","plotB","tooltips","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","sort","a","b","$order","prevY","Percent","top","bottom","_fy","reverse","prevBottom","bounds","SerialChart","XYCursor","_Container","Grid","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","ev","_handleLineFocus","_handleLineBlur","document","_handleLineMove","keyCode","dir","increment","focused","getCellWidthPosition","_line","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_handleSyncWith","_getPoint","_toX","animate","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","Axis","_Component","List","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","processAxis","ghostLabel","makeLabel","DataItem","adapters","disable","tooltipText","tooltipHTML","interactive","_start","_end","_updateFinals","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_markDirtyKey","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","_bullets","axisRange","_seriesAxisRanges","_updateCursor","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","updateTooltipBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","labels","ticks","axisFills","localBounds","gWidth","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","_sizeDirty","coordinate","_nextItem","_autoGapCount","_fieldName","axisDataItem","Component","segmentedLine","segments","groups","firstGroup","firstPoint","g","line","points","p","Line","_Graphics","isPrivateDirty","_clear","$draw","Tick","_Line","classNames","concat","AxisTick","_Tick","AxisLabel","_Label","Label","AxisRenderer","ListTemplate","Template","_new","template","make","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","_tooltip","markDirty","AxisRendererX","_AxisRenderer","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToCoordinate","endPosition","toggleVisibility","bulletPosition","previousBullet","previousSprite","x0","x1","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","CategoryAxis","_Axis","fields","_valuesDirty","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","baseAxis","_markDirtyAxes","openKey","otherAxis","startDataItem","endDataItem","hasValue","_loop","__valueXShowFields","__valueYShowFields","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","j","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","updateGrid","updateTick","updateFill","updateBullet","NaN","field","cellLocation","_axisLocation","category","getDataItemPositionX","getDataItemPositionY","axisPositionToIndex","populateString","markDirtyText","fieldName","seriesDataItem","zoomToIndexes","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","MultiDisposer","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","format","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","_dataItems","processDataItem","_formatText","stepPower","decCount","inited","valueToPosition","hasTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","getStackedXValueWorking","getStackedYValueWorking","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","_fixMin","_fixMax","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","XYSeries","_Series","_super2","valueFields","_setRawDefault","_removeAxisRange","_fixPosition","isType","_makeFieldNames","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","valueXFields","split","valueYFields","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_updateFields","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","stacked","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","_markStakedDirtyStack","_dataGrouped","_groupSeriesData","_stackDirty","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","mainContainerMask","_mainContainerMask","mainContainer","mask","_x","_y","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_axesDirty","_afterDataChange","_aggregatesCalculated","getPoint","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_handleDataSetChange","_markDataSetDirty","_dataSetId","bullets","_this10","promises","then","_this11","_isShowing","_sequencedShowHide","_context","Promise","all","_callee","_this12","_this13","_isHiding","_context2","_callee2","_this14","showDataItem","_valueFields","waitForStop","_context3","_callee3","_this15","hideDataItem","_context4","_callee4","stackedSeries","_markDirtyStack","_skipped","hideTooltip","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","_getTooltipTarget","legendDataItem","txt","_emptyDataItem","valueLabel","_position","resetExtremes","_mainDataItems","Series","BaseColumnSeries","_XYSeries","listTemplate","makeColumn","categoryAxis","valueAxis","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_toggleColumn","_updateGraphics","_makeGraphics","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","t","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","fitW","fitH","offset","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","pbr","tooltipPoint","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","close","previousClose","list","lastDataItem","column","visualSettings","setting","ColumnSeries","_BaseColumnSeries","RoundedRectangle","Bullet","_positionBullet","Legend","itemContainers","themeTagsSelf","markers","valueLabels","markerRectangles","itemContainer","marker","makeItemContainer","nameField","fillField","strokeField","clickTarget","item","dataContext","makeMarker","useDefaultMarker","makeMarkerRectangle","createLegendMarker","_t","name","makeValueLabel","clickContainer","_addClickEvents","values","targetA","targetB","indexA","data","indexB","hoverDataItem","unhoverDataItem","labelText","readerAlert"],"sourceRoot":""}